name: "Transifex Push / Pull"

on:
  workflow_call:
    secrets:
      transifex-token:
        required: true
      github-token:
        required: true

jobs:
  transifex-push-pull:
    name: "Sync locales with Transifex"
    runs-on: ubuntu-latest
    steps:

    ##########################################
    # Checkout repository                    #
    ##########################################
    - name: "Checkout"
      uses: actions/checkout@v4

    ##########################################
    # Install dependencies                  #
    ##########################################
    - name: Install Dependencies
      run: |
        sudo apt-get install gettext libgettextpo-dev python3-dev python3-pip libffi-dev libxml2-dev libxslt-dev git
        pip install lxml gitpython PyGithub termcolor

    ##########################################
    # Run composer                           #
    ##########################################
    - name: Install Composer Dependencies
      uses: php-actions/composer@v6
      with:
        dev: yes


    ##########################################
    # Generate <plugin>.pot file             #
    ##########################################
    - name: "Generate <plugin>.pot file"
      run: ./vendor/bin/extract-locales


    ##########################################
    # Push and Pull transifiex source        #
    ##########################################
    - name: Push source file (.pot)
      uses: transifex/cli-action@v2
      with:
        args: push
        token: ${{ secrets.transifex-token }}

    - name: Clean Transifex CLI
      run: rm -fr /tmp/tx

    - name: Pull source file (.po / .mo)
      uses: transifex/cli-action@v2
      with:
        args: pull --force --all --minimum-perc=80
        token: ${{ secrets.transifex-token }}

    ##########################################
    # Generate .mo files                     #
    ##########################################
    - name: "Compil mo"
      run: ./vendor/bin/plugin-release --compile-mo

    ##########################################
    # Generate random branch name            #
    ##########################################
    - name: "Generate target branch name"
      run: echo BRANCH_NAME=transifex/i18n-updates-$(date +%s) >> $GITHUB_ENV

    - name: "Check status"
      id: "check-status"
      run: |
        if [[ `git status --porcelain locales/*.mo` ]]; then
          echo "CREATE_PR=yes" >> $GITHUB_OUTPUT
        else
          echo "CREATE_PR=no" >> $GITHUB_OUTPUT
        fi


    ##########################################
    # Create Pull Request                    #
    ##########################################
    - name: Create Pull Request
      if: ${{ steps.check-status.outputs.CREATE_PR == 'yes' }}
      id: cpr
      uses: peter-evans/create-pull-request@v7
      with:
        commit-message: Update locales
        committer: github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>
        author: ${{ github.actor }} <${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com>
        signoff: false
        branch: ${{ env.BRANCH_NAME }}
        add-paths: locales/
        labels: i18n
        delete-branch: true
        title: 'Chore(i18n): update translations'
        body: Auto-generated `PR` to update translations
        draft: false
        # A PAT is required.
        # From https://docs.github.com/en/actions/using-workflows/triggering-a-workflow#triggering-a-workflow-from-a-workflow:
        # > When you use the repository's GITHUB_TOKEN to perform tasks, events triggered by the GITHUB_TOKEN,
        # > with the exception of workflow_dispatch and repository_dispatch, will not create a new workflow run.
        # > This prevents you from accidentally creating recursive workflow runs. For example, if a workflow run pushes
        # > code using the repository's GITHUB_TOKEN, a new workflow will not run even when the repository
        # > contains a workflow configured to run when push events occur.
        token: ${{ secrets.github-token }}
